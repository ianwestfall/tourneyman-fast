# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test-backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    services: 
      db:
        image: postgres:12
        env: 
          POSTGRES_DB: tourneyman
          POSTGRES_USER: tourneyman
          POSTGRES_PASSWORD: password
        ports:
          - "5432:5432"
    env:
      DB_HOST: localhost
      
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      - name: Run database migrations
        run: |
          pushd database
          pipenv run db_migrations
          popd
      - name: Test
        run: |
          pipenv run pytest --cov=. tests/
